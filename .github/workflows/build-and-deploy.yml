name: Build and Deploy

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: go test ./...
  
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    needs: test
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image
      - name: Build and push auth4me Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/auth4me:latest

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            # Navigate to your project directory on the server
            cd /home/revandpratama/auth4me
            
            # Write the secrets from GitHub to the .env file on the server
            echo "${{ secrets.DOT_ENV }}" > .env

            # Pass the repository owner to Docker Compose
            export OWNER=${{ github.repository_owner }}
            
            # Use the production compose file
            docker-compose -f docker-compose.yml pull
            docker-compose -f docker-compose.yml up -d
            
            # Optional: Clean up old, unused Docker images to save space
            docker image prune -af
