

services:
  auth4me:
    container_name: auth4me
    image: ghcr.io/revandpratama/auth4me:latest
    environment:
      - APP_ENVIRONMENT=${APP_ENVIRONMENT}
      - JWT_SECRET=${JWT_SECRET}
      - REST_PORT=${REST_PORT}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URL=${GOOGLE_REDIRECT_URL}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.auth-secure.rule=Host(`auth.${URL}`)"
      - "traefik.http.routers.auth-secure.entrypoints=websecure"
      - "traefik.http.routers.auth-secure.service=auth-service"
      - "traefik.http.routers.auth-secure.tls.certresolver=myresolver"

      - "traefik.http.services.auth-service.loadbalancer.server.port=${REST_PORT}"
    expose:
      - "${REST_PORT}"
    networks:
      - proxy
    restart: unless-stopped

  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      - "--api.dashboard=true"                  # Enable Traefik dashboard
      - "--log.level=DEBUG" 
      
      - "--providers.docker=true"               # Enable Docker provider
      - "--entrypoints.web.address=:80"         # HTTP
      - "--entrypoints.websecure.address=:443"  # HTTPS
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"

      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addRoutersLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    networks:
      - proxy
    labels:
      - "traefik.http.routers.api.rule=Host(`traefik.${URL}`)"
      - "traefik.http.routers.api.service=api@internal"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v3.5.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - proxy
    # ports:
    #   - "9090:9090"
    restart: unless-stopped


  grafana:
    image: grafana/grafana:12.1.1-ubuntu
    container_name: grafana
    # ports:
    #   - "3000:3000"
    expose:
      - "3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.grafana-secure.rule=Host(`metric.${URL}`)"
      - "traefik.http.routers.grafana-secure.entrypoints=websecure"
      - "traefik.http.routers.grafana-secure.service=grafana-service"
      - "traefik.http.routers.grafana-secure.tls.certresolver=myresolver"
      - "traefik.http.services.grafana-service.loadbalancer.server.port=3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - proxy


volumes:
  grafana-storage:
  letsencrypt:

networks:
  proxy:
    name: proxy